-- relational database(관계형데이터베이스)
-- RDBMS(관계형 데이터베이스 관리 시스템/소프트웨어)
-- PostgreSQL : 데이터 저장 공간의 테이블

--물리적인 개념(디스크 공간)
--table space : 오라클, 포스트그레스큐엘
--database : mysql(mariaDB),sql Server

--논리적인 개념(데이터 구조)
--schema : 데이터베이스 객체들의 집합
--database(최상위 구조) > schema > table
-- PostgresQl : 사용자(시스템)>애플리케이션(서비스)>기능(객체구조)
-- Oracle : 시스템>사용자(애플리케이션)>기능(객체구조)
-- MySQL : database=schema 사용자(앱)>기능(객체구조)
-- SQL Server : 시스템>사용자>기능
--사용자(시스템) > 애플리케이션(서비스) > 기능(객체구조)
--postgres > myworkspace > photo, contact
--			commerce > purchase_order
-- 실제 데이터는 table에 저장됨 -> table space공간에 물리적인 파일로 저장

-- 스키마 생성
create schema myworkspace;
-- 현재 쿼리창에서 사용할 스키마 선택
set schema 'myworkspace';

-- 테이블 : 실질적인 데이터 저장 공간
-- 행(row, record)/열(column,field)
-- 1개의 행이 1건의 데이터
-- 1개의 열이 속성 (attr,prop,field)1건

-- pk(primary key - 주키) : 유일성과 최소성을 보장하는 컬럼
-- 유일성 : 전체 테이블 데이터에서 유일한 값을 가짐(사용자 id, 이에일, 주민등록번호)
-- 최소성 : 최소의 컬럼 개수와 크기로 구성되어있음
-- pk값만 알면 데이터 1건을 찾을 수 있음

--create table xx(
--컬럼명 컬럼타입 옵션.
--컬럼명 컬럼타입 옵션.
--)
create table photo(
	--컬럼명 컬럼타입 [그외 옵션]

	--generated by default as identity : 자동증가되는 값(1,2,3,4...)
	id int8 generated by default as identity, 
--	created_time int8 not null, 
--	description varchar(255) (가변길이 문자열 255바이트)
	description varchar(255), 
	file_name varchar(255), 
	file_type varchar(255), 
	photo_url varchar(255), 
	title varchar(255), 
	primary key (id)
	);
	
-- insert into 테이블(컬럼1, 컬럼2...) values(값1. 값2)
insert into photo(created_time,title)
values(1,'test');

--테이블 데이터 전체를 조회
--select 컬럼목록  from 테이블명;
select * from photo; --전체 컬럼 선택
select id, title from photo; --특정컬럼 선택

--특정데이터 조회
-- select 컬럼목록 from 테이블명 where 조건식
-- equal 조건식 : 컬럼명 = 값
select * from photo where id = 1; --map.get(1)
select * from photo where id >= 1;

--특정 데이터 삭제
delete from  photo where id=1;

--특정 데이터 수정
-- update 테이블
-- set 컬럼명=값, 컬럼명=값
update photo set created_time , description , file_name ,file_type ,...
where id=3